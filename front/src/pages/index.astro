---
import Layout from '../layouts/Layout.astro';
import Grid from '../components/grid/grid';
import SearchBar from '../components/searchBar/searchBar.vue';
import Pagination from '../components/Pagination/pagination.astro';

// Configuration de la pagination
const CARS_PER_PAGE = 12;
const currentPage = parseInt(Astro.url.searchParams.get('page') || '1');

// Fetch data from strapi server avec pagination
let strapiCars = [];
let totalCars = 0;
let totalPages = 1;

try {
  // Premier appel pour obtenir le nombre total
  const countResponse = await fetch('http://localhost:1337/api/cars', {
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json'
    }
  });

  if (countResponse.ok) {
    const countResult = await countResponse.json();
    totalCars = countResult.meta?.pagination?.total || 0;
    totalPages = Math.ceil(totalCars / CARS_PER_PAGE);
  }

  // Fetch des données paginées
  const start = (currentPage - 1) * CARS_PER_PAGE;
  const response = await fetch(
    `http://localhost:1337/api/cars?populate=*&pagination[start]=${start}&pagination[limit]=${CARS_PER_PAGE}`,
    {
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      }
    }
  );

  if (response.ok) {
    const result = await response.json();
    strapiCars = result.data || [];
    console.log('Fetched data from Strapi:', strapiCars);
    console.log(`Page ${currentPage}/${totalPages} - Total: ${totalCars} voitures`);
  }
} catch (error) {
  console.error('Error fetching data from Strapi:', error);
}
---

<Layout>
  <main class="min-h-screen bg-gray-100">
    <SearchBar client:load />

    <!-- Informations sur la pagination -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
      <div class="flex justify-between items-center">
        <p class="text-gray-600">
          Affichage de {((currentPage - 1) * CARS_PER_PAGE) + 1} à {Math.min(currentPage * CARS_PER_PAGE, totalCars)} 
          sur {totalCars} voitures
        </p>
        <p class="text-gray-600">Page {currentPage} sur {totalPages}</p>
      </div>
    </div>

    <!-- Grille des voitures -->
    <Grid client:load cars={strapiCars.length > 0 ? strapiCars : []} />

    <!-- Pagination -->
    {totalPages > 1 && (
      <Pagination 
        currentPage={currentPage}
        totalPages={totalPages}
        baseUrl={Astro.url.pathname}
      />
    )}
  </main>
</Layout>

<!-- <style>
  /* Styles additionnels si nécessaire */
  .pagination-info {
    @apply text-sm text-gray-500;
  }
</style> -->